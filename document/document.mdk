[INCLUDE=presentation]
Title         : Justification Logic
Sub Title     : A Curry- Howard View
Title Note    : Dissertation Proposal &nbsp; &date;
Author        : Konstantinos Pouliasis
Affiliation   : The Graduate Center, CUNY
Email         : konstantinos.pouliasis@gmail.com
Reveal Theme  : solarized
Beamer Theme  : madrid
Package     : mathpartir.sty
Package       : mathtools
Bib style     : plainnat
Bibliography  : secondexam.bib

[TITLE]



#Introduction
 
## CURRY--HOWARD ISO [@curry1934functionality;@howard1995formulae]

* sparked from the investigation of the connection of explicit proofs in intuitionistic logic and programs of a simple programming 
language with simple types 

* central topic of study in the field of type theory 

* standard theoretical tool for  studying and designing programming languages  

## Curry--Howard in logic
* a new paradigm in logic studies that emphasizes _proof relevance_

* _ scales_ : the isomorphism holds for more complex logics and 
  correspondingly captures complex programming language constructs.  

* We use  _proofs-as-programs_(-as-morphisms) and __CHI__ interchangeably.

* The relation of proofs, programs and categories (morphisms)  has renewed interest in foundations (HoTT)

## Roadmap of this presentation
 * Basic concepts and (scalable) proof techiques of __CHI__ 
 
      * intuitionistic propositional logic (__IPL__)/ simply typed lambda calculus (__STLC__)
 
 * Basic concepts and results of _Justification Logic_ (__JL__)
 
 * Exploring a Curry-Howard reading of basic __JL__
  

# IPL and STLC 


## Intuitionism and constructive mathematics

  * Notion of truth collides with the notion of proof 

  * Continuation of Brouwer's program 

  * Mathematical reasoning and logic  is a human faculty

  * The creative subjects use mathematical language to as a means to 
express  their reasoning (proof) constructs   
  * There  are open problems 
  
  * Propositions do not come with a pre-existing truth value




## Intuitionism and constructive mathematics

 * Proofs are stand alone objects

 * NOT godelizations of some fixed formal system

 * Mathematical objects such as __Nat__ together the primitive recursive function space
 are  obtained as models of (proof objects) of equational proof theories 
 * (e.g. a typed version of Godel's __T__ in the case of __Nat__ with primitive recursion). 

## Logic within constructive mathematics
 * The object of logic is the study of "sane" proof constructs independently of formal systems

 * The traditional chasm between "syntax" and "semantics" is no longer that very fruitful
  at least when "engineering" new logics.

 * "The meaning of a connective is the ways that one can prove it " (Martin Lof - Verificationist approach)

 * "The meaning of a connective is the way one can use its proofs" (Pragmatist approach)

# Natural Deduction ( JUDGMENTALY)
## Judgments
* Logic defines _judgments_
* In propositional logic   __judgments__ have subjects of  two kinds:
  * $A\  {\sf Prop}$: $A$ is in the universe of discourse
  * $A\  {\sf true}$ : $A$ has a proof
* $A\  {\sf Prop}$: can be replaced with a context free grammar in the propositional case.
But in general that's not the case. E.g. $\forall x. A(x)$ is not even a type whereas $\forall x:B. A(x)$
is only when $x:A\vdash B(x):{\sf Prop}$
* We will be ignoring type formation (${\sf Prop}$) judgments for now. 

~ Begin Vertical


## Hypotheticals

Judgment construction can be presented in tree form 

~ Math
  
  {\begin{array}{c}
  {J_1 \ldots J_i}  \\
  \vdots \\
  {J} 
  \end{array} } 
~ 


the root ($J$) is the deduced judgment

and leafs (   ${J_1 \ldots J_i}$) are hypothesized judgments


## Hypotheticals
  * we will be concerned with $J$ of the form ${\sf A \ true}$
  
  * hypotheses will be labeled 
  
  * labels ${\sf true}$ are also inferrable
~ End Vertical



##Rules of Inference: Hypotheses
 Hypotheses can be trivially reflected. I.e.  

 
  ~ Math
  {\begin{array}{c}
    {\text For\  } k \in [1\ldots i]\\
    \\
  {x_1:A_1  \ldots x_i: A_i}  \\
  \vdots \\
  {A_{k}} 
  \end{array} } 
  ~


## Inference: Conjunction

   ~ Math
  \inferrule*[right=Intro] {
 {\begin{array}{c}
  \vdots \\
  {A} 
  \end{array} } \\{\begin{array}{c}
  \vdots \\
  {B} 
  \end{array} }} {A\wedge B}
  ~


  ~ Math
    \begin{array}{c c}
  \inferrule*[right=Elim1] {
 {\begin{array}{c}
   \\
  \vdots \\
  {A\wedge B} 
  \end{array} }} {A} & \inferrule*[right=Elim2] {
 {\begin{array}{c}
   \\
  \vdots \\
  {A\wedge B} 
  \end{array} }} {A}
  \end{array}
  ~

## Equality and Harmony

Proof trees are objects of logic and - as mathematical objects -  are equipped with _equality_

~ Center
__Logic is "algebrized"__
~

Equalities should provide for the "harmony" of the Introduction 
-- Elimination constructions-- destructions

## Harmony in Slogans

~ Center
["Elimination Rules are not too strong"]{ color=red }
~
Introducing  a connective just to eliminate it won't give anything new. 

~ Center
["Elimination Rules are not too weak"]{ color=blue }
~
 You should have "enough" elimination techniques to reintroduce a connective using introductions.

~Begin Vertical
## Harmony Conjunction

~Center 
Local Soundness 
~
  ~ Math
    \begin{array}{l c r}
  {\inferrule*[right=Elim1]{\inferrule*[right=Intro] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A} 
  \end{array} } \\{\begin{array}{c}
  \mathcal{E} \\
  {B} 
  \end{array} }} {A\wedge B}}{A}} & = &   
   {\begin{array}{c}
  \mathcal{D}\\
  {A} 
  \end{array} }
  \end{array}
  ~ 


## Harmony Conjunction
~Center 
Local Soundness 
~
  ~ Math
    \begin{array}{l c r}
  {\inferrule*[right=Elim2]{\inferrule*[right=Intro] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A} 
  \end{array} } \\{\begin{array}{c}
  \mathcal{E} \\
  {B} 
  \end{array} }} {A\wedge B}}{B}} & = &   
   {\begin{array}{c}
  \mathcal{E}\\
  {A} 
  \end{array} }
  \end{array}
  ~ 

## Harmony Conjunction
~ Center
Local Completeness
~

 ~ Math
\begin{array}{l c r}
   {\begin{array}{c}
  \mathcal{D}\\
  {A\wedge B} 
  \end{array} } & =  &  {\inferrule*[right=Intro]{{\inferrule*[right=Elim1] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A\wedge B} 
  \end{array} } } {A}}\\
  {\inferrule*[right=Elim2] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A\wedge B} 
  \end{array} } } {B}}}{A\wedge B}}
  \end{array}
  ~ 
~ End Vertical

## Top
$0$-ary conjunction

~ Math
\inferrule*[right=Intro]{ }{\top}
~

No elimination rule: You cannot extract any data from no data!

Local Soundess trivial (no elim)

Local Completeness:
~ Math
\begin{array}{l c r}
\inferrule*[right=Intro]{\mathcal{D} }{\top} & = & \inferrule*[right=Intro]{}{\top} 
\end{array}
~



## Implication

As conjunctions internalize "pairing", implication internalizes hypothetical reasoning.

~ Math
  \begin{array}{c}
 {\inferrule*[right=Intro] {
 {\begin{array}{c}
  x_1:A_i \ldots \overline{x:A}\\
  \vdots \\
  {B} 
  \end{array} } } {A\supset B}} 
 \\
 \\
 {\inferrule*[right=Elim] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A\supset B} 
  \end{array} }\\ {\begin{array}{c}
  \mathcal{E}\\
  {A} 
  \end{array} } } {B}}
 \end{array}
~


## Harmony: Implication

~ Center 
  Local Soundness
~

~ Math
  \begin{array}{c c c}
  {\inferrule*{
{\inferrule*[right=Intro]
{
 {\begin{tabular}[b]{c}
 $\overline{x:A}$
  \\
  $\mathcal{D}$
  \\
  $B$
 \end{tabular}} \\
 \\
}
{A\supset B}}\\{\begin{tabular}[b]{c}
  $\mathcal{E}$
  \\
  $A$
 \end{tabular}}} {B}} & = & {\begin{tabular}[b]{c}
  $\mathcal{E}$
  \\
  $A$
  \\
  $\mathcal{D}$\\
  $B$
\end{tabular}}
 \end{array}
~





## Harmony : Implication

~ Center 
  Local Completeness
~

~ Math
	\begin{array}{c c c}
    {\begin{array}[b]{c}  {\mathcal{D}} \\ A\supset B  \end{array}} & = &
		{\inferrule{
				{\inferrule[]{
						{\begin{array}[b]{c}  {\mathcal{D}} \\ A\supset B  \end{array}}\\{\overline{x:A}}} { B }}}{A \supset B}
			}
		
		
		
	\end{array}
~
~ Begin Vertical
## Disjunction

~ Math
\begin{array}{l c}
  \inferrule*[right=intro1]{A}{A\vee B} &   \inferrule*[right=intro2]{B}{A\vee B}\\
\\
\inferrule*[right=elim$^{x,y}$] {{\begin{tabular}[b]{c}
  $\mathcal{D}$
  \\
  $A\vee B$
 \end{tabular}}\\ 
  { {\begin{tabular}[b]{c}
 $\overline{x:A}$
  \\
  $\mathcal{E}$
  \\
  $C$
 \end{tabular}}}\\
  { {\begin{tabular}[b]{c}
 $\overline{y:B}$
  \\
  $\mathcal{F}$
  \\
  $C$
 \end{tabular}}}}{C}
 \end{array}
~

## Disjunction: Harmony

~ Center
Local Soundness
~

~ Math
\begin{array}{l c r }
\inferrule*[right=elim$^{x,y}$] {{\begin{tabular}[b]{c}
  $\mathcal{D}$
  \\
  $A$\\
  \hline 
  $A\vee B$
 \end{tabular}}\\ 
  { {\begin{tabular}[b]{c}
 $\overline{x:A}$
  \\
  $\mathcal{E}$
  \\
  $C$
 \end{tabular}}}\\
  { {\begin{tabular}[b]{c}
 $\overline{y:B}$
  \\
  $\mathcal{F}$
  \\
  $C$
 \end{tabular}}}}{C} &=& {\begin{tabular}[b]{c}
 $\mathcal{D}$\\
 $A$\\
 $\mathcal{E}$\\
  $C$
 \end{tabular}}
\end{array}
~



## Disjunction: Harmony
~ Center
Local Soundness
~
~ Math
\begin{array}{l c r }
\inferrule*[right=elim$^{x,y}$] {{\begin{tabular}[b]{c}
  $\mathcal{D}$
  \\
  $B$\\
  \hline 
  $A\vee B$
 \end{tabular}}\\ 
  { {\begin{tabular}[b]{c}
 $\overline{x:A}$
  \\
  $\mathcal{E}$
  \\
  $C$
 \end{tabular}}}\\
  { {\begin{tabular}[b]{c}
 $\overline{y:B}$
  \\
  $\mathcal{F}$
  \\
  $C$
 \end{tabular}}}}{C} &=& {\begin{tabular}[b]{c}
 $\mathcal{D}$\\
 $B$\\
 $\mathcal{F}$\\
  $C$
 \end{tabular}}
\end{array}
~

## Disjunction: Harmony

~ Center
Local Completeness
~

~ Math
\begin{array}{c c}
  {\begin{array}{c}  \\ \inferrule*{\mathcal{D}}{A\vee B} \end{array}} & =
\end{array}
~

~ Math
\begin{array}{c r}
  \\
\inferrule*[right=E$^{\overline{x},\overline{y}}$] {
  {\begin{array}{c}  \\ \inferrule*{\mathcal{D}}{A\vee B} \end{array}}\\ 
  {\begin{array}{c} \\ \inferrule*[right=I1]{\overline{x:A}}{A\vee B} \end{array}}\\
  {\begin{array}{c} \\ \inferrule*[right=I2]{ \overline{y:B}}{A\vee B} \end{array}}
   }{A\vee B} & = 
\end{array}
~
~End Vertical

~ Begin Vertical
## Bottom

~ Math 
\inferrule*[right=Elim]{\bot}{A}
~
~ Center
NO INTRO RULE
~

~ Center
local soundness: Trivial (No intro)

local completeness:
~

~ Math
  {\begin{array}{l c r}  \\ \inferrule*{\mathcal{D}}{\bot} & = & \inferrule*{\inferrule*{\mathcal{D}}{\bot}}{\bot} \end{array}} 
~


~End Vertical

## Proof Trees To Terms (STLC): Contexts

* Proof trees transliterate to (one dimensional) proof terms constructions
of the simply typed lambda calculus as do equalities. 

* Labeled hypotheses become _typed variable contexts_ (scopes) which can be reflected freely
at any point in proof term constructions.
* Similarly to well typed program formation  in programming languages. Sequent construction
corresponds to type checking.

~ Math
\inferrule*{{\inferrule*{ }{x:int\vdash x:int}}\\{\inferrule*{ }{x:int\vdash 1:int}}}{x:int\vdash x+1:int}
~ 

##STLC : Contexts
For reasons similar to ${\sf Prop}$, context formation also becomes a judgment.

~ Math
\inferrule*[right=Empty]{ }{\bullet \vdash {\sf ctx}}
~
~Math
\inferrule*[right= Cons] {\Gamma\vdash {\sf ctx}\\ \Gamma\vdash A {\sf\  Prop}\\ x\not\in Dom(\Gamma)  }
{\Gamma,x:A\vdash {\sf ctx}}
~ 

* As labels are "pluggable" tree slots, variables are substitutable for terms of 
appropriate type

* Similarly to typed arguments in a functions declaration.
* One should always prove this substitution principle as a metatheorem :

$\Gamma,x:A\vdash N:B \text{\ and }\Gamma\vdash M:A \Longrightarrow \Gamma\vdash M[N/x]:B $ 

## CONJUNCTION AS PRODUCT
Intro rules transliterate to data constructor declarations

  ~ Math
  \inferrule*[right=Intro] {
 {\begin{array}{c}
   \mathcal{D}\\
  {A} 
  \end{array} } \\{\begin{array}{c}
  \mathcal{E} \\
  {B} 
  \end{array} }} {A\wedge B}
<!-- begin merge (remove this line to resolve the conflict) -->
~ Begin Remote
  ~
~ End Remote
~
 Transcribes to: 
 
~ Math
  \inferrule*[right=Intro]
  {{\Gamma\vdash M:A}\\{\Gamma\vdash N:B}} 
  {\Gamma\vdash \langle M, N\rangle: A\times B}
~

## CONJUNCTION AS PRODUCT

Similarly for elimination

~ Math
  \begin{array}{c }
  {\inferrule*[right=Elim1]
    {\Gamma\vdash  M : A\times B}
    {\Gamma\vdash fst(M):A}} \\ 
    \\
    {\inferrule*[right=Elim2]
    {\Gamma\vdash  M : A\times B}
    {\Gamma\vdash snd(M):B}}
   \end{array}
~

~ Begin Vertical

## CONJUNCTION HARMONY

The local soundness and completeness give the local reduction ($\beta$) 
and expansion ($\eta$) rules

 ~ Math
    \begin{array}{l c r}
  {\inferrule*[right=Elim]{\inferrule*[right=Intro] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A} 
  \end{array} } \\{\begin{array}{c}
  \mathcal{E} \\
  {B} 
  \end{array} }} {A\wedge B}}{A}} & = &   
   {\begin{array}{c}
  \mathcal{D}\\
  {A} 
  \end{array} }
  \end{array}
 ~ 

  ~ Math
   \Gamma\vdash fst (\langle M, N \rangle) =_{\beta} M: A
   ~ 
  And similarly 
  
~ Math
\Gamma\vdash snd (\langle M, N \rangle) =_{\beta} N:B
~

## Conjunction: Harmony

$\eta$ expansion is given analogously
Proof tree equality 
 ~ Math
\begin{array}{l c r}
   {\begin{array}{c}
  \mathcal{D}\\
  {A\wedge B} 
  \end{array} } & =  &  {\inferrule*[right=Intro]{{\inferrule*[right=Elim1] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A\wedge B} 
  \end{array} } } {A}}\\
  {\inferrule*[right=Elim2] {
 {\begin{array}{c}
  \mathcal{D}\\
  {A\wedge B} 
  \end{array} } } {B}}}{A\wedge B}}
  \end{array}
  ~
translates to
~ Central
$\Gamma\vdash M = \langle fst(M), snd(M)\rangle :A \wedge B$
~

~ End Vertical

## Implication as function space

~ Math
  \begin{array}{c }
  {\inferrule*[right=Intro]
    {\Gamma,x:A\vdash  M : A}
    {\Gamma\vdash \lambda x:A. M:A\supset B}} \\ 
    \\
    {\inferrule*[right=Elim]
    {{\Gamma\vdash  M : A \supset B}\\
    {\Gamma\vdash N:A}}{\Gamma\vdash (MN):B}}
   \end{array}
~
Harmony gives the  $\beta\eta-$ equalities 
Similarly we obtain the whole equational system of the STLC
$(\lambda x: A. M) N =_{\beta} M[N/x]$

$f:A \supset B = \lambda x:A. f x$

## Disjunction as co-product
~ Math
  \begin{array}{c }
  {\inferrule*[right=Intro1]
    {\Gamma\vdash  M : A}
    {\Gamma\vdash  inl^{B}(M):A\vee B}} \\ 
    \\
    {\inferrule*[right=Intro2]
    {\Gamma\vdash  M : B}
    {\Gamma\vdash inr^{A}(M):A\vee B}}
   \end{array}
~


## IPL as proof-irrelevant natural deduction


## Thank you!
Thanks for looking





[BIB]


